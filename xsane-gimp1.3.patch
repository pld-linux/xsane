diff -ru xsane-0.92.orig/configure.in xsane-0.92/configure.in
--- xsane-0.92.orig/configure.in	2003-05-13 14:29:10.000000000 +0200
+++ xsane-0.92/configure.in	2004-04-11 16:27:20.000000000 +0200
@@ -18,9 +18,9 @@
 SANE_V_MAJOR=1
 VERSION=${V_MAJOR}.${V_MINOR}
 PACKAGE_VERSION="$PACKAGE-$VERSION"
-AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
-AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
-AC_DEFINE_UNQUOTED(PACKAGE_VERSION, "$PACKAGE_VERSION")
+AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Define to the name of the distribution])
+AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Define to the version of the distribution])
+AC_DEFINE_UNQUOTED(PACKAGE_VERSION, "$PACKAGE_VERSION", [Define to the name and version of the distribution])
 AC_SUBST(PACKAGE)
 AC_SUBST(VERSION)
 AC_SUBST(PACKAGE_VERSION)
@@ -33,7 +33,13 @@
 AC_MSG_CHECKING([whether GIMP plugin is requested])
 dnl Default is enabled GIMP plugin
 AC_ARG_ENABLE(gimp, [  --disable-gimp          do not include GIMP plugin mode], USE_GIMP=$enableval, USE_GIMP=yes)
-AC_MSG_RESULT($USE_GIMP)
+AC_ARG_ENABLE(gimp12, [  --enable-gimp12         include GIMP 1.2 plugin mode (defaults to GIMP 2.0)], USE_GIMP12=$enableval, USE_GIMP12="no")
+if test "${USE_GIMP12}" = "yes"; then
+    AC_MSG_RESULT([yes, GIMP 1.2])
+    USE_GIMP="no"
+else
+    AC_MSG_RESULT([$USE_GIMP, GIMP 2.0])
+fi
 
 dnl Check for jpeg support
 AC_MSG_CHECKING([whether JPEG support is requested])
@@ -100,7 +106,7 @@
 fi
 
 dnl Checks for library functions.
-AM_FUNC_ALLOCA
+AC_FUNC_ALLOCA
 AC_FUNC_MMAP
 AC_CHECK_FUNCS(atexit mkdir sigprocmask strdup strndup strftime strstr strsep strtod snprintf usleep strcasecmp strncasecmp lstat)
 
@@ -125,11 +131,28 @@
 dnl *** gimp support we need the test for gtk
 AM_PATH_GTK2(2.0.0, HAVE_GTK=yes, )
 if test "x${HAVE_GTK}" = "x"; then
+  if test "${USE_GIMP}" = "yes"; then
+    AC_MSG_WARN([*** GIMP 2.0 plugin requested, but GTK+ 2.0 not found, falling back to GIMP/GTK < 2.0 if possible ***])
+    USE_GIMP = no
+    USE_GIMP12 = yes
+  else
+    AC_MSG_WARN([*** GTK+ 2.0 not found, falling back to GTK+ < 2.0 if possible ***])
+  fi
   AM_PATH_GTK(1.2.0, HAVE_GTK=yes, )
+else
+  if test "${USE_GIMP}" = "yes"; then
+    AM_PATH_GIMP_2_0(1.3.23, HAVE_GIMP=yes)
+    if test "${HAVE_GIMP}" = "yes"; then
+      AC_DEFINE([HAVE_LIBGIMP_GIMP_H], 1, [Define to 1 if you have the <libgimp/gimp.h> header file.])
+    fi
+  fi
 fi
 
-if test "${USE_GIMP}" = "yes"; then
+if test "${USE_GIMP12}" = "yes"; then
  AM_PATH_GIMP(1.0.0, HAVE_GIMP=yes)
+    if test "${HAVE_GIMP}" = "yes"; then
+	AC_DEFINE([ENABLE_GIMP_1_2], 1, [Define to 1 if GIMP 1.2 support wanted])
+    fi
 fi
  
 
diff -ru xsane-0.92.orig/src/xsane-save.c xsane-0.92/src/xsane-save.c
--- xsane-0.92.orig/src/xsane-save.c	2003-07-28 21:34:35.000000000 +0200
+++ xsane-0.92/src/xsane-save.c	2004-04-11 16:25:27.000000000 +0200
@@ -67,8 +67,13 @@
 #include <libgimp/gimp.h>
  
 static void xsane_gimp_query(void);
+
+#ifndef ENABLE_GIMP_1_2
+static void xsane_gimp_run(const gchar *name, gint nparams, const GimpParam * param, gint *nreturn_vals, GimpParam ** return_vals);
+#else
 static void xsane_gimp_run(char *name, int nparams, GimpParam * param, int *nreturn_vals, GimpParam ** return_vals);
- 
+#endif /* !ENABLE_GIMP_1_2 */
+
 GimpPlugInInfo PLUG_IN_INFO =
 {
   NULL,                         /* init_proc */
@@ -3845,10 +3850,18 @@
 
 /* ---------------------------------------------------------------------------------------------------------------------- */
 
+#ifndef ENABLE_GIMP_1_2
+static void xsane_gimp_run(const gchar *name, gint nparams, const GimpParam * param, gint *nreturn_vals, GimpParam ** return_vals)
+#else
 static void xsane_gimp_run(char *name, int nparams, GimpParam * param, int *nreturn_vals, GimpParam ** return_vals)
+#endif /* !ENABLE_GIMP_1_2 */
 {
  static GimpParam values[2];
+#ifndef ENABLE_GIMP_1_2
+ GimpRunMode run_mode;
+#else
  GimpRunModeType run_mode;
+#endif /* !ENABLE_GIMP_1_2 */
  char devname[1024];
  char *args[2];
  int nargs;
@@ -3881,6 +3894,9 @@
   switch (run_mode)
   {
     case GIMP_RUN_INTERACTIVE:
+#ifndef ENABLE_GIMP_1_2
+      gimp_extension_ack();
+#endif /* !ENABLE_GIMP_1_2 */
       xsane_interface(nargs, args);
       values[0].data.d_status = GIMP_PDB_SUCCESS;
       break;
diff -ru xsane-0.92.orig/src/xsane.c xsane-0.92/src/xsane.c
--- xsane-0.92.orig/src/xsane.c	2003-07-28 22:48:20.000000000 +0200
+++ xsane-0.92/src/xsane.c	2004-04-11 16:25:27.000000000 +0200
@@ -7595,7 +7595,9 @@
 #ifdef HAVE_LIBGIMP_GIMP_H
   gtk_rc_parse(gimp_gtkrc());
 
+# ifdef ENABLE_GIMP_1_2
   gdk_set_use_xshm(gimp_use_xshm());
+# endif /* !ENABLE_GIMP_1_2 */
 #endif
 
   /* before we open any windows we have to read the style file */
@@ -8112,7 +8114,12 @@
     set_gimp_PLUG_IN_INFO(&PLUG_IN_INFO);
 #endif
     /* gimp_main() returns 1 if xsane wasn't invoked by GIMP */
+
+#ifndef ENABLE_GIMP_1_2
+    result = gimp_main(&PLUG_IN_INFO, argc, argv);
+#else
     result = gimp_main(argc, argv);
+#endif /* !ENABLE_GIMP_1_2 */
 
 #if 0
     /* this is the old version that seems to use the compatibility functions */
diff -ru xsane-0.92.orig/src/xsane.h xsane-0.92/src/xsane.h
--- xsane-0.92.orig/src/xsane.h	2003-05-19 18:59:13.000000000 +0200
+++ xsane-0.92/src/xsane.h	2004-04-11 16:25:27.000000000 +0200
@@ -290,7 +290,7 @@
 
 # ifdef HAVE_LIBGIMP_GIMPFEATURES_H
 #  include <libgimp/gimpfeatures.h>
-# else
+# elif defined (ENABLE_GIMP_1_2)
 #  define GIMP_CHECK_VERSION(major, minor, micro) 0
 # endif /* HAVE_LIBGIMP_GIMPFEATURES_H */
 
@@ -302,12 +302,18 @@
 #   include "xsane-gimp-1_0-compat.h" 
 #  endif
 # else
+#  ifdef ENABLE_GIMP_1_2
 /* we have the old gimp interface and need the compatibility header file */
-#  include "xsane-gimp-1_0-compat.h" 
+#   include "xsane-gimp-1_0-compat.h" 
+#  endif /* ENABLE_GIMP_1_2 */
 # endif
 
   extern GimpPlugInInfo PLUG_IN_INFO; /* needed for win32 */
 
+#ifndef ENABLE_GIMP_1_2
+# define GIMP_HAVE_RESOLUTION_INFO
+#endif /* !ENABLE_GIMP_1_2 */
+
 #endif /* HAVE_LIBGIMP_GIMP_H */
 
 /* ---------------------------------------------------------------------------------------------------------------------- */
